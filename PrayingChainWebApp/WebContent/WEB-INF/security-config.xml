<beans:beans xmlns="http://www.springframework.org/schema/security" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"   
	 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security.xsd">

	<http pattern="/css/**" security="none"/>
	<http pattern="/fonts/**" security="none"/>
	<http pattern="/images/**" security="none"/>
	<http pattern="/js/**" security="none"/>
	<http pattern="/js/**/**" security="none"/>
	<http pattern="/pages/**" security="none"/>

	<!-- Authorization rules -->
	<http>

		<csrf disabled="false"/>
		<intercept-url pattern="/uploadCalendar.do" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="**" access="permitAll"/>

<!--	Ejemplos de interceptores
 		<intercept-url pattern="/Login.jsp" access="permitAll"/>
		<intercept-url pattern="/createUserAccount.html" access="hasRole('ROLE_SU')"/>
		<intercept-url pattern="/createTurn.html" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern="/**" access="isFullyAuthenticated()" />-->
 
		<http-basic/> <!-- Esto para evitar tener que definir un formulario de login -->
		
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="csrfHeaderFilter" /> <!-- Para aÃ±adir el token CSRF a las respuestas del servidor -->
	</http>
	
	<beans:bean name="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<!-- Authentication rules -->
	<authentication-manager alias="edmAuthenticator">
		<authentication-provider>
			<password-encoder ref="bcryptEncoder"/>  
			<jdbc-user-service data-source-ref="DataSource" 
							   users-by-username-query="select username,password,enabled from users where username = ? and enabled=1"
							   role-prefix="ROLE_"/>
		</authentication-provider>
	</authentication-manager>

</beans:beans>	