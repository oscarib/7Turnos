<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd

http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:annotation-driven/>

    <!-- General Configuration -->
    <bean id="Configuration" class="es.edm.services.Impl.Configuration_DDBB_Impl"/>
    <context:property-placeholder location="/WEB-INF/7turnos.properties"/>

    <!-- Datasources -->
    <bean id="DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://127.0.0.1:3306/edm"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
        <property name="preferredTestQuery" value="SELECT 1"/>
		<property name="acquireRetryDelay" value="5000"/>
        <property name="acquireRetryAttempts" value="5"/>
        <property name="breakAfterAcquireFailure" value="true"/>
        <property name="testConnectionOnCheckout" value="true"/>
        <property name="checkoutTimeout" value="60000"/>
		<property name="idleConnectionTestPeriod" value="300"/>
    </bean>

    <!-- **************************************************************************************** -->
    <!-- Gestiona las transaciones de JPA -->
    <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManager"/>
    </bean>

    <tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>

    <!-- Escaneador que gestiona y valida los mapeos relacionales contra las tablas al inicio de la aplicacion -->
    <bean id="entityManager"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="DataSource"/>
        <property name="packagesToScan">
            <array>
                <value>es.edm.domain.entity</value>
                <value>es.edm.domain.middle</value>
            </array>
        </property>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <!-- Habilitar para medir rendimiento -->
                <!-- <prop key="hibernate.generate_statistics">true</prop> -->
            </props>
        </property>
    </bean>
    <!-- ****************************************************************************** -->

    <!-- Templates -->
    <bean id="JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="DataSource"/>
    </bean>

    <!-- Services -->

	<bean id="FileService" class="es.edm.services.Impl.FileService_Impl"/>

    <!-- Spring MVC Auto-Controller scanning -->
    <context:component-scan base-package="es.edm.controllers"/>
    <context:component-scan base-package="es.edm.services.Impl"/>
    <context:component-scan base-package="es.edm.dao.impl"/>
    <context:component-scan base-package="es.edm.filters"/>

    <!-- QUARTZ-->
    <!-- For times when you just need to invoke a method on a specific object -->
    <!-- For times when you need more complex processing, passing data to the scheduled job -->
    <bean name="EmailSchedulerJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="es.edm.quartz.EmailSchedulerJob" />
        <property name="durability" value="true" />
    </bean>

    <!-- Run the job every 2 seconds with initial delay of 1 second -->
    <bean id="simpleTrigger"  class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="EmailSchedulerJob" />
        <!-- Starts 10 seconds before App runs-->
        <property name="startDelay" value="10000" />
        <!-- Takes place once per 1h-->
        <property name="repeatInterval" value="3600000" />
    </bean>

    <!-- Scheduler factory bean to glue together jobDetails and triggers to Configure Quartz Scheduler -->
    <bean  class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="jobDetails">
            <list>
                <ref bean="EmailSchedulerJob" />
            </list>
        </property>

        <property name="triggers">
            <list>
                <ref bean="simpleTrigger" />
            </list>
        </property>
    </bean>
</beans>